import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'dart:math';

void main() => runApp(MyApp());

class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  TextEditingController _controllerheight = new TextEditingController();
  TextEditingController _controllerweight = new TextEditingController();
  String genderGrp = 'Male';
  String ageGrp = 'No';
  double r1 = 0.0;
  double r2 = 0.0;
  double r3 = 0.0;
  double r4 = 0.0;

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        resizeToAvoidBottomPadding: false,
        body: Center(
          child: Container(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    
                    
                    Text(
                      'Lean Body Mass Calculator',
                      style:
                          TextStyle(fontSize: 28),
                          
                    ),
                    
                    Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text('Gender?', style: TextStyle(fontSize: 17)),
                        Radio(
                            value: 'Male',
                            groupValue: genderGrp,
                            onChanged: (val) {
                              genderGrp = val;
                              setState(() {});
                            }),
                        Text('Male'),
                        Radio(
                            value: 'Female',
                            groupValue: genderGrp,
                            onChanged: (val) {
                              genderGrp = val;
                              setState(() {});
                            }),
                        Text('Female'),
                      ],
                    ),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text('Age 14 or younger?',
                            style: TextStyle(fontSize: 17)),
                        Radio(
                            value: 'Yes',
                            groupValue: ageGrp,
                            onChanged: (val) {
                              ageGrp = val;
                              setState(() {});
                            }),
                        Text('Yes'),
                        Radio(
                            value: 'No',
                            groupValue: ageGrp,
                            onChanged: (val) {
                              ageGrp = val;
                              setState(() {});
                            }),
                        Text('No'),
                      ],
                    ),
                    Padding(
                        padding:
                            EdgeInsets.all(5),
                        child: TextField(
                          controller: _controllerheight,
                          keyboardType: TextInputType.numberWithOptions(),
                          decoration: InputDecoration(
                            labelText: 'Height-cm',
                          ),
                        )),
                    Padding(
                        padding: EdgeInsets.all(5),
                        child: TextField(
                          controller: _controllerweight,
                          keyboardType: TextInputType.numberWithOptions(),
                          decoration: InputDecoration(
                            labelText: 'Weight-kg',
                          ),
                        )),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      children: [
                        RaisedButton(
                          onPressed: () {
                            calculateLBM(
                                _controllerweight.text, _controllerheight.text);
                          },
                          padding: const EdgeInsets.all(0.0),
                          child: Container(
                            padding: EdgeInsets.only(
                                left: 28, right: 28, top: 10, bottom: 10),
                            child: Text('Calculate'),
                          ),
                        ),
                        RaisedButton(
                          onPressed: () {
                            _controllerheight.clear();
                            _controllerweight.clear();
                            r1 = 0.0;
                            r2 = 0.0;
                            r3 = 0.0;
                            r4 = 0.0;
                            setState(() {});
                          },
                          padding: const EdgeInsets.all(0.0),
                          child: Container(
                            padding: EdgeInsets.only(
                                left: 28, right: 28, top: 10, bottom: 10),
                            child: Text('Clear'),
                          ),
                        ),
                      ],
                    ),
                    SizedBox(height: 10),
                    Text('Boer:' +
                        r1.toStringAsFixed(3) +
                        'KG'),
                    Text('James:' +
                        r2.toStringAsFixed(3) +
                        'KG' ),
                    Text('Hume:' +
                        r3.toStringAsFixed(3) +
                        'KG' ),
                    Text('Peter(Children):' +
                        r4.toStringAsFixed(3) +
                        'KG' ),
                  ],
                ),
          ),
        ),
      ),
    );
  }

  calculateLBM(String weights, String heights) {
    double weight = double.parse(weights);
    double height = double.parse(heights);
    print(ageGrp);
    print(genderGrp);
    if (ageGrp == 'No') {
      if (genderGrp == 'Male') {
        r1 = 0.407 * weight + 0.267 * height - 19.2;
        r2 = 1.1 * weight - 128 * pow((weight / height), 2);
        r3 = 0.32810 * weight + 0.33929 * height - 29.5336;
      } else {
        r1 = 0.252 * weight + 0.473 * height - 48.3;
        r2 = 1.07 * weight - 148 * pow((weight / height), 2);
        r3 = 0.29569 * weight + 0.41813 * height - 43.2933;
      }
    } else {
      r4 = 3.8 * (0.0215 * pow(weight, 0.6469) * pow(height, 0.7236));
    }
    r1.toStringAsFixed(3);
    r2.toStringAsFixed(3);
    r3.toStringAsFixed(3);
    r4.toStringAsFixed(3);
    setState(() {});
  }
}
